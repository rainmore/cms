plugins {
    alias(libs.plugins.jarTest) apply false
    id("idea")
    id("java-library")
}

configurations.all {
    exclude("org.apache.logging.log4j:*")
}

val rootProjectLibDir = rootDir.toPath().resolve("project")
val projectLibDir     = projectDir.toPath().resolve("project")

apply(from = rootProjectLibDir.resolve("assemble.gradle").toString())

dependencies {
    annotationProcessor(libs.querdsl.apt) { artifact {classifier = "jpa"} }
    annotationProcessor(libs.javax.persistence.api)
    annotationProcessor(libs.javax.annotation.api)

    // query dsl
    api(libs.querdsl.jpa)
    api(libs.jetbrains.annotations)

    implementation(libs.bundles.hibernate)

    // The `javax.annotation-api` dependency is (re)declared here as `compileOnly`
    // to allow for annotations that are used in the code generated by QueryDSL.
    compileOnly(libs.javax.annotation.api)

    // logging
    implementation(libs.bundles.logging)
}
